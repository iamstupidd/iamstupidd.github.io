<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LaTex公式显示</title>
    <url>/2020/08/07/LaTex%E5%85%AC%E5%BC%8F%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; Hexo的Latex显示处理，我用的是next 6.13.4。主要是网上的教程大多是换一个渲染引擎，其实完全没有必要。Next还是很强大的。</p>
<a id="more"></a>

<ol>
<li>首先是主题下面的设置文件(${\small ~\themes\next\_config.yml}$) math部分设置如下。</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="comment"># Server-side plugin: https://github.com/next-theme/hexo-filter-mathjax</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) required for full Katex support.</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>在需要latex公式处理的md文章中添加 ${\small mathjax: true}$ </p>
</li>
<li><p>结果如图</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="1.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">1. </font>Latex公式支持</div> </center></li>
</ol>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>日常维护</tag>
      </tags>
  </entry>
  <entry>
    <title>bug修正记录</title>
    <url>/2020/08/03/bug%E4%BF%AE%E6%AD%A3%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 所有的编译器比赛期间的bug记录</p>
<a id="more"></a>

<p>图着色ppt: <a href="https://www.cs.cmu.edu/afs/cs/academic/class/15745-s16/www/lectures/">https://www.cs.cmu.edu/afs/cs/academic/class/15745-s16/www/lectures/</a></p>
<h2 id="1-彻底修复指令8位循环右移两位限制-add-sub-mov-和-栈中寻址限制-ldr-str"><a href="#1-彻底修复指令8位循环右移两位限制-add-sub-mov-和-栈中寻址限制-ldr-str" class="headerlink" title="1.  彻底修复指令8位循环右移两位限制(add,sub,mov) 和 栈中寻址限制(ldr,str)"></a>1.  彻底修复指令8位循环右移两位限制(add,sub,mov) 和 栈中寻址限制(ldr,str)</h2><h2 id="2-溢出"><a href="#2-溢出" class="headerlink" title="2. 溢出"></a>2. 溢出</h2><h2 id="3-codegen-cpp-bl-指令的dst和src"><a href="#3-codegen-cpp-bl-指令的dst和src" class="headerlink" title="3. codegen .cpp bl 指令的dst和src"></a>3. codegen .cpp bl 指令的dst和src</h2>]]></content>
      <categories>
        <category>Compiler</category>
        <category>Optimization</category>
        <category>Competition</category>
        <category>Compiler</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/07/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>内存管理</title>
    <url>/2020/08/06/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 今天早上初赛结束，所以就休息了一天，在宿舍躺尸了一天。所以顺便想看下C++内存管理的部分，想把这个东西弄得比较透彻吧，今天的内容属于开个头。因为类似的学习文希望显示得优先级高一些，所以就修改了 js 文件，添加了文章优先级排序。</p>
<a id="more"></a>

<h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h2><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="books.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">1. </font>相关书籍</div> </center>

<h2 id="People"><a href="#People" class="headerlink" title="People"></a>People</h2><ul>
<li>${Doug}$ ${Lea}$</li>
</ul>
<h2 id="classes"><a href="#classes" class="headerlink" title="classes"></a>classes</h2><ul>
<li>侯捷：<a href="https://www.bilibili.com/video/BV1Kb411B7N8">https://www.bilibili.com/video/BV1Kb411B7N8</a></li>
</ul>
<h2 id="Study-Note"><a href="#Study-Note" class="headerlink" title="Study Note"></a>Study Note</h2><p>&nbsp; &nbsp; 因为要去学内存管理，所以肯定要了解要调用什么去管理，而这些函数或者是关键字都是有层次关系的。</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="memAlloc_layer.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">2. </font>不同层次的分配</div> </center>

<p>&nbsp; &nbsp; 而作为一名一直使用c++的小coder ,我一般使用的就是 ${\small cpp}$  ${\small permitives}$ 部分，具体相关函数及特性如下。</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="memAlloc_primitive.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">3. </font>C++ primitive</div> </center>

<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="Sample1.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">4. </font>所有的内存分配方式测例</div> </center>

<p>&nbsp; &nbsp; 这几个层次之间的关系之前的图说的比较清楚，但是一般程序员嘛，看不到源码不死心，所以看一下 ${\small  new}$ 的源码。</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="new_oriCode.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">5. </font>new函数源码</div> </center>

<p>其中调用了 ${\small operator new}$  这个函数,是在这个函数里面调用了 ${\small malloc}$ 函数。</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="operator_new.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">6. </font>operator new函数源码</div> </center>



<p>&nbsp; &nbsp; ${\small delete}$ 函数类似，最终调用了 ${\small free}$ 函数。</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="delete_oricode.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">7. </font>delete函数源码</div> </center>

<p>&nbsp; &nbsp; ${\small new}$ 中使用了${\small new}$出来的变量显式调用构造函数的表达式。这个表达式作为程序员是不能调用的，但是程序员可以显式调用析构函数。</p>
<center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="构造.png"><div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"><font color="#ff7700">8. </font>构造函数不可显式调用</div> </center>

]]></content>
      <tags>
        <tag>C++</tag>
        <tag>Memory Mangement</tag>
      </tags>
  </entry>
  <entry>
    <title>文章置顶</title>
    <url>/2020/08/07/%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 添加文章置顶功能，但是在安装卸载渲染引擎后会<font color="#ff7700">失效</font>。</p>
<a id="more"></a>

<p>手动改js: <a href="https://www.jianshu.com/p/42a4efcdf8d7">https://www.jianshu.com/p/42a4efcdf8d7</a></p>
<p>然后修改渲染：<a href="https://blog.csdn.net/qwerty200696/article/details/79010629">https://blog.csdn.net/qwerty200696/article/details/79010629</a></p>
]]></content>
      <tags>
        <tag>日常维护</tag>
      </tags>
  </entry>
  <entry>
    <title>每日记录-2020/07/31</title>
    <url>/2020/07/31/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95-2020-07-31/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 果然还是没能早点起来。。。。9：20</p>
<a id="more"></a>

<p><img src="1.png" alt="1"></p>
<h2 id="今天做了什么"><a href="#今天做了什么" class="headerlink" title="今天做了什么"></a>今天做了什么</h2><ul>
<li><p><font color="#0099ff">Compiler</font></p>
<p><img src="2.png" alt="图着色"></p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    CLion的使用</span></span><br><span class="line"><span class="comment">    树莓派的调整</span></span><br><span class="line"><span class="comment">    继续图着色算法</span></span><br><span class="line"><span class="comment">    看的差不多懂了ARM汇编</span></span><br><span class="line"><span class="comment">    帮忙找了两个bug,会了怎么修改</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<ul>
<li><font color="#ff6622">TeamViewer没法链接</font></li>
</ul>
]]></content>
      <tags>
        <tag>Daily Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>每日记录-2020/08/01</title>
    <url>/2020/08/01/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95-2020-08-01/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 今天早上参加了北大的一个老师的面试，叫做李源老师，问了一下现在在哪里，在干什么，比赛的细节，然后问了本科阶段比赛的经历，比赛的算法的细节，最后问了读博读硕的想法，接下来就该解晓东老师的面试了。</p>
<a id="more"></a>

<h1 id="每日总结"><a href="#每日总结" class="headerlink" title="每日总结"></a><font color="#19CAAD">每日总结</font></h1><h2 id="今天做了什么"><a href="#今天做了什么" class="headerlink" title="今天做了什么"></a><font color="#BEE7E9">今天做了什么</font></h2><ul>
<li><font color="#0099ff">Compiler</font></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">今天全天都在找bug</span></span><br><span class="line"><span class="comment">1. return 不对</span></span><br><span class="line"><span class="comment">2. 叶子函数判断不正确</span></span><br><span class="line"><span class="comment">。。。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<ul>
<li><font color="#ff6622">HEXO PDF的处理</font>,现在谷歌云盘还是不行，被主动拒绝了</li>
<li><font color="#ff6622">HEXO尝试了一下动漫小人物，但是没法切换，所以卸载了</font></li>
<li><font color="#ff3344">英文的简历</font></li>
</ul>
<h2 id="今日花费"><a href="#今日花费" class="headerlink" title="今日花费"></a><font color="#BEE7E9">今日花费</font></h2><ul>
<li>早饭  4.3</li>
<li>午饭  9.6（饭）+3（雪糕）</li>
<li>晚饭  2.5+3.7</li>
</ul>
<h2 id="明天最想做的事情"><a href="#明天最想做的事情" class="headerlink" title="明天最想做的事情"></a><font color="#BEE7E9">明天最想做的事情</font></h2><p>首先是<strong>早起</strong>，早起做<strong>slam</strong></p>
]]></content>
      <tags>
        <tag>Daily Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>每日记录-2020/08/02</title>
    <url>/2020/08/02/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95-2020-08-02/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 今天改了一天代码，早上洗了一早上衣服，然后下午主要是想看下struct释放内存的操作，但是不太对，然后就释放了几个函数内的局部malloc，然而并没有改变测评还是CE的局面。晚上自己写了matrix_add的测试用例，发现了一个立即数的bug，但是还是没有什么影响。</p>
<a id="more"></a>

<h2 id="修改的错误"><a href="#修改的错误" class="headerlink" title="修改的错误"></a><font color="#BEE7E9">修改的错误</font></h2><ol>
<li><p><font color="#ff6622">这个是自己写测试样例发现的错误</font></p>
<ul>
<li>具体如图：</li>
</ul>
<p><img src="1.png" alt="1"></p>
<ul>
<li><p>具体修改代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* codegen.cpp */</span></span><br><span class="line"><span class="keyword">if</span>(i &lt; <span class="number">200</span> &amp;&amp; i&gt;<span class="number">-200</span>)&#123;</span><br><span class="line">       <span class="built_in">sprintf</span>(inst, <span class="string">&quot;\tstr     &#x27;s0, [&#x27;s1, #%d]\n&quot;</span>, i);</span><br><span class="line">       emit(AS_Oper(inst, <span class="literal">NULL</span>, L(munchExp(e2), L(munchExp(e1), <span class="literal">NULL</span>)), <span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    Temp_temp r1 = Temp_newTemp();</span><br><span class="line">    <span class="built_in">sprintf</span>(inst, <span class="string">&quot;\tldr     &#x27;d0, =%d\n&quot;</span>, i);</span><br><span class="line">    emit(AS_Oper(inst, L(r1,<span class="literal">NULL</span>), <span class="literal">NULL</span>, <span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">sprintf</span>(inst2, <span class="string">&quot;\tstr     &#x27;s0, [&#x27;s1, &#x27;s2]\n&quot;</span>);</span><br><span class="line">    emit(AS_Oper(inst2, <span class="literal">NULL</span>, L(munchExp(e2), L(munchExp(e1) , L(r1,<span class="literal">NULL</span>))), <span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改后结果</p>
</li>
</ul>
<p><img src="2.png" alt="2"></p>
<ol start="2">
<li><p><font color="#ff6622">针对上一个问题的修改</font></p>
<ul>
<li>参考</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 曾老师给的参考代码</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    加载立即数 ldr r0,=#100</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ILoc::load_imm</span><span class="params">(<span class="built_in">string</span> rsReg, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (PlatformArm::constExpr(num)) &#123;</span><br><span class="line">        <span class="comment">// mov r8,#12</span></span><br><span class="line">        emit(<span class="string">&quot;mov&quot;</span>, rsReg, toStr(num));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// ldr r8,=0xfff0</span></span><br><span class="line">        load_label(rsReg, toStr(num, <span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (PlatformArm::constExpr(off)) &#123;</span><br><span class="line">        <span class="comment">// sub sp,sp,#16</span></span><br><span class="line">        emit(<span class="string">&quot;sub&quot;</span>, <span class="string">&quot;sp&quot;</span>, <span class="string">&quot;sp&quot;</span>, toStr(off));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//ldr r8,=257</span></span><br><span class="line">        load_imm(tmpReg, off);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//sub sp,sp,r8</span></span><br><span class="line">        emit(<span class="string">&quot;sub&quot;</span>, <span class="string">&quot;sp&quot;</span>, <span class="string">&quot;sp&quot;</span>, tmpReg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    循环左移两位</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PlatformArm::roundLeftShiftTwoBit</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> &amp;num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> overFlow = num &amp; <span class="number">0xc0000000</span>;<span class="comment">//取左移即将溢出的两位</span></span><br><span class="line">    num = (num &lt;&lt; <span class="number">2</span>) | (overFlow &gt;&gt; <span class="number">30</span>);<span class="comment">//将溢出部分追加到尾部</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    判断num是否是常数表达式，8位数字循环右移偶数位得到</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">bool</span> PlatformArm::__constExpr(<span class="keyword">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> new_num = (<span class="keyword">unsigned</span> <span class="keyword">int</span>) num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (new_num &lt;= <span class="number">0xff</span>) &#123;</span><br><span class="line">            <span class="comment">// 有效表达式</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环左移2位</span></span><br><span class="line">        roundLeftShiftTwoBit(new_num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    同时处理正数和负数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PlatformArm::constExpr</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> __constExpr(num) || __constExpr(-num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>实际处理</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//codegen.cpp 70-106</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    循环左移两位</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">roundLeftShiftTwoBit</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> &amp;num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> overFlow = num &amp; <span class="number">0xc0000000</span>;<span class="comment">//取左移即将溢出的两位</span></span><br><span class="line">    num = (num &lt;&lt; <span class="number">2</span>) | (overFlow &gt;&gt; <span class="number">30</span>);<span class="comment">//将溢出部分追加到尾部</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    判断num是否是8位可放的，8位数字循环右移偶数位得到</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">bool</span> __constExpr(<span class="keyword">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> new_num = (<span class="keyword">unsigned</span> <span class="keyword">int</span>) num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (new_num &lt;= <span class="number">0xff</span>) &#123;</span><br><span class="line">            <span class="comment">// 有效表达式</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环左移2位</span></span><br><span class="line">        roundLeftShiftTwoBit(new_num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    同时处理正数和负数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">constExpr</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> __constExpr(num) || __constExpr(-num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实例</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//codegen.cpp 124-133</span></span><br><span class="line"><span class="keyword">if</span>(constExpr(i))&#123;</span><br><span class="line">    <span class="built_in">sprintf</span>(inst, <span class="string">&quot;\tldr     &#x27;d0, [&#x27;s0, #%d]\n&quot;</span>, i);</span><br><span class="line">    emit(AS_Oper(inst, L(r, <span class="literal">NULL</span>), L(munchExp(e1), <span class="literal">NULL</span>), <span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">sprintf</span>(inst,<span class="string">&quot;\tldr     &#x27;d0,=%d\n&quot;</span>,i);</span><br><span class="line">    emit(AS_Oper(inst, L(r, <span class="literal">NULL</span>), <span class="literal">NULL</span>, <span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">sprintf</span>(inst2, <span class="string">&quot;\tldr     &#x27;d0, [&#x27;s0, &#x27;d0]\n&quot;</span>);</span><br><span class="line">    emit(AS_Oper(inst2,L(r,<span class="literal">NULL</span>),L(munchExp(e1),<span class="literal">NULL</span>),<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><font color="#ff6622">修复字节长度warning</font></p>
<p><img src="3.png" alt="3"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\13948\Desktop\C0\Compiler_GIT\liveness.cpp: In <span class="keyword">function</span> <span class="string">&#x27;void solveLiveness(Live_graph*, G_graph, G_table, G_table)&#x27;</span>:</span><br><span class="line">C:\Users\13948\Desktop\C0\Compiler_GIT\liveness.cpp:149:49: warning: cast to pointer from <span class="built_in">integer</span> of different size [-Wint-to-pointer-cast]</span><br><span class="line">             Temp_enterPtr(spillCost, ti, (void*)spills);</span><br><span class="line">                                                 ^~~~~~</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//liviness.cpp</span></span><br><span class="line"><span class="keyword">long</span> spills  ==&gt;  <span class="keyword">long</span> <span class="keyword">long</span> spills</span><br><span class="line"><span class="keyword">void</span>* 为<span class="number">8</span>个字节</span><br></pre></td></tr></table></figure>





</li>
</ol>
</li>
</ol>
]]></content>
      <tags>
        <tag>Daily Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>每日记录-2020-08-03</title>
    <url>/2020/08/03/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95-2020-08-03/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 今天起来得特别早，主要就是倩倩今天第一天上班嘞，我怕她一个人早上坐车比较害怕，所以我就早点起来，万一说害怕了给我打电话我也能接上。上周五我的湖盐发债上市了，然后截止到上周五收盘赚了160.6，看看这次能赚多少, hhh。起的太早了，脑子还是有点蒙的。</p>
<p>&nbsp; &nbsp; 今天想做的任务有先看怎么释放结构体等的内存，然后查时间看TLE。</p>
<a id="more"></a>

<p><img src="1.png" alt="1"></p>
<h2 id="ADD-HEXO：在线聊天Tidio"><a href="#ADD-HEXO：在线聊天Tidio" class="headerlink" title="ADD HEXO：在线聊天Tidio"></a><font color="#BEE7E9">ADD HEXO：在线聊天Tidio</font></h2><ol>
<li><p><font color="#ff6622">代码</font></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># themes/next/config.yml 214-221</span></span><br><span class="line"><span class="comment"># A button to open designated chat widget in sidebar.</span></span><br><span class="line"><span class="comment"># Firstly, you need enable the chat service you want to activate its sidebar button.</span></span><br><span class="line"><span class="attr">chat:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#service: chatra</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">tidio</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-comment</span> <span class="comment"># Icon name in Font Awesome, set false to disable icon.</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">Chat</span> <span class="comment"># Button text, change it as you wish.</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
   <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># themes/next/config.yml 766-771</span></span><br><span class="line"><span class="comment"># Tidio Support</span></span><br><span class="line"><span class="comment"># See: https://www.tidiochat.com</span></span><br><span class="line"><span class="comment"># Dashboard: https://www.tidiochat.com/panel/dashboard</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">xhf2buz63zl56r6o3xy4hkep9gznwevf</span> <span class="comment"># Public Key, get it from dashboard. See: https://www.tidiochat.com/panel/settings/developer</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><font color="#ff6622">实现效果</font></li>
</ol>
<ul>
<li><p><font color="#ff8899">侧栏</font></p>
<p><img src="2.png" alt="2"></p>
</li>
<li><p><font color="#ff8899">右下角聊天框</font></p>
<p><img src="3.png" alt="3"></p>
</li>
</ul>
<h2 id="Compiler"><a href="#Compiler" class="headerlink" title="Compiler"></a><font color="#BEE7E9">Compiler</font></h2><p>&nbsp; &nbsp;  今天把regalloc 和 color彻底盘了一遍，没有任何问题。在修改了codegen和arm_frame的问题之后，终于呀终于呀把功能测试AC了</p>
<p><img src="4.png" alt="4"></p>
<p><img src="5.png" alt="5"></p>
]]></content>
      <tags>
        <tag>Daily Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>今日记录-2020-08-05</title>
    <url>/2020/08/05/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95-2020-08-05/</url>
    <content><![CDATA[<p>&nbsp; &nbsp;又是调 Compiler bug的一天呢~</p>
<a id="more"></a>

<p> <img src="1.jpg" alt="1"></p>
<p>唉，从昨天下午开始，倩倩就不理我了</p>
]]></content>
      <tags>
        <tag>Daily Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>每日记录</title>
    <url>/2020/07/30/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="2020-7-30"><a href="#2020-7-30" class="headerlink" title="2020/7/30"></a>2020/7/30</h1><h2 id="去过的地方"><a href="#去过的地方" class="headerlink" title="去过的地方"></a>去过的地方</h2><ul>
<li>计算机学院楼</li>
<li>云天苑餐厅</li>
<li>宿舍</li>
</ul>
<h2 id="今天做了什么"><a href="#今天做了什么" class="headerlink" title="今天做了什么"></a>今天做了什么</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Compiler的图着色算法</span></span><br><span class="line"><span class="comment">// 部署了Hexo,设置了一些细节，评论功能，侧栏，页脚等</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;hello&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="明天最想做的事情"><a href="#明天最想做的事情" class="headerlink" title="明天最想做的事情"></a>明天最想做的事情</h2><p>早起！</p>
<p><img src="1.png" alt="1"></p>
]]></content>
      <tags>
        <tag>Daily Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>韩国比赛</title>
    <url>/2020/08/03/%E9%9F%A9%E5%9B%BD%E6%AF%94%E8%B5%9B-2019-08-05/</url>
    <content><![CDATA[<p>&nbsp; &nbsp; 我认为最难的竞赛是无人机平台下的无人机竞速比赛。这个比赛的目的是为了构建一个能够用于3D赛道上基于视觉的自动导航系统，完成的功能有巡航，避障，起飞降落，检测特征点等。这个比赛的难点有电脑端与无人机端的数据交互，这个我们是基于Ros的框架进行的，对这个框架的学习，包括通信机制，节点管理等，主要是通过ROS的教程与样例完成学习，然后统一制定一个规范，保证代码风格的统一。另外在避障方面，主要是处理场外干扰的因素，然后另外要区分障碍的深度问题。在起飞降落中，主要做的是顺滑平稳，采用了PID的控制方法和YOLO框架来识别降落点。</p>
<p>&nbsp; &nbsp; 到了真正的比赛场地，实际遇到的问题是这个信息交互是通过wifi实现的，但是比赛场地wifi信号多而杂，会导致图传等问题有延迟卡顿，我们解决的主要方式是先讨论一下其他连接方式，蓝牙，Zigbee等，确定短时间内无法更换或无法满足需求；然后希望能够增强自己的wifi信号来达到目的，稳定性不强；最后看了wifi相关参数，发现wifi频段和信道问题的影响，现在绝大多数设备的wifi频段集中于2.4G，而我们只要电脑和无人机都wifi的支持5G频段即可避免信道冲突，达到目的。另外有光流漂移的问题，主要是通过增加光流标志点实现的。</p>
<p><font color="#ff7700">(含比赛视频)</font></p>
<a id="more"></a>

<div style="position: relative; width: 85%; height: 0; padding-bottom: 75%;"><iframe 
src="https://www.bilibili.com/video/BV1LK411n7E5/" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

]]></content>
      <categories>
        <category>Competition</category>
        <category>UAV</category>
      </categories>
  </entry>
</search>
